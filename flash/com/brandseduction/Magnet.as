package com.brandseduction {  	import flash.display.*;	import flash.events.*;	import flash.text.*;	import flash.geom.*;	import flash.filters.DropShadowFilter;	import caurina.transitions.Tweener;		import de.popforge.events.SimpleMouseEvent;	import de.popforge.events.SimpleMouseEventHandler;	public class Magnet extends MovieClip {		var _id:Number;		var _word;		var _label;		var _x_init;		var _y_init;		var _x_target;		var _y_target;		var _depth;		function Magnet(id:Number, word:String) {			_id = id;			_word = word;						buttonMode = true;       mouseChildren = false;			SimpleMouseEventHandler.register(this);			addEventListener( SimpleMouseEvent.PRESS, pressHandler);			addEventListener( SimpleMouseEvent.RELEASE, releaseHandler);			addEventListener( SimpleMouseEvent.RELEASE_OUTSIDE, releaseHandler);		}				public function init(x_init:Number=0, y_init:Number=0, x_target:Number=0, y_target:Number=0, depth:Number=0) {      rotation = Math.round(Math.random()*(30))-15;			make_vinyl();			make_label();			adjust();						_x_init = x_init;			_y_init = y_init;			_x_target = x_target;			_y_target = y_target;			_depth = depth;						// If this magnet has placement data already..			if (_x_init != 0) {				// trace("I am predestined!");				move_to_initial_spot_and_wait();			} else {				find_an_empty_spot();							}		}				function move_to_initial_spot_and_wait() {			x = _x_init;			y = _y_init;		}				function move_to_target_spot() {			if ((_x_target != _x_init) || (_y_target != _y_init)) {				var d = Math.random() * 5;				Tweener.addTween(this, {x:_x_target, y:_y_target, time:1, delay:d, transition:"easeInOutCubic", onStart:straighten_out_and_move_to_top});			}		}				function straighten_out_and_move_to_top() {			straighten_out();			 move_to_top();		}				function pick_a_random_spot() {		  x = Math.round(Math.random() * (parent.x_span()-width)) + parent._left_edge + width/2;			y = Math.round(Math.random() * parent.y_span()) + parent._top_edge;		}				function find_an_empty_spot() {		  pick_a_random_spot();		  						if (this.hitTestObject(parent._handle)) {				find_an_empty_spot();			}						_x_init = x;			_y_init = y;			/*			var seeking = false;			while (seeking) {        trace("looking for a spot for " + this.name)				for (i=0; i<parent._magnets.length; i++) {				  trace("check for collision.")					var m = parent._magnets[i];					if (this.hitTestObject(m) or this.hitTestObject(parent._handle)) {					  trace ("collision!")						find_an_empty_spot();						break;					}				}				seeking = false;      }			*/		}				function make_vinyl() {			var v = _vinyl = new MagnetVinyl();			addChild(v);		}				function make_label() {      // Font      var courier:Font = new Courier();			// Format			var f:TextFormat = new TextFormat();			f.font = courier.fontName;			f.color = 0x000000;			f.size = 11;			      // Text      var l = new TextField();      _label = l;      l.autoSize = TextFieldAutoSize.LEFT;      l.selectable = false;      l.embedFonts = true;			l.defaultTextFormat = f;			l.text = _word;			addChild(l);		}				function adjust() {		  _vinyl.width = _label.textWidth + 10		  _vinyl.x = -_vinyl.width/2		  _vinyl.y = -_vinyl.height/2		  		  _label.x = _vinyl.x + 2;		  _label.y = _vinyl.y + 2;		}				function straighten_out() {		  Tweener.addTween(this, {rotation:0, time:1.5, transition:"easeOutElastic"});		}				function avoid_fridge_handle() {						var h = parent._handle			if (this.hitTestObject(h)) {				var x_target = h.x + h.width + width/2				Tweener.addTween(this, {x:x_target, time:.25, transition:"easeInCubic"})			}		}		    function move_to_top() {      parent.setChildIndex(this, parent.numChildren-1);    }				private function pressHandler(event:SimpleMouseEvent):void {		  move_to_top();		  straighten_out();			startDrag(false, new Rectangle(parent._left_edge + width/2, parent._top_edge, parent.x_span() - width, parent.y_span()));		}				private function releaseHandler(event:SimpleMouseEvent):void {				// trace (event.type);			stopDrag();			avoid_fridge_handle();		}	}}